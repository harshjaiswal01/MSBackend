openapi: 3.0.0
info:
  title: User Management API
  description: API documentation for the User Management system.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local server
tags:
  - name: User
    description: Operations related to users
  - name: Google OAuth
    description: Operations related to Google OAuth
  - name: User Details
    description: Operations related to user details
  - name: Subscriptions
    description: Operations related to user subscriptions
  - name: Reference Calendar
    description: Operations related to the reference calendar
  - name: User Calendar
    description: Operations related to the user calendar
paths:
  /register:
    post:
      tags:
        - User
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request
  /login:
    post:
      tags:
        - User
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
        '401':
          description: Unauthorized
  /login/google:
    get:
      tags:
        - Google OAuth
      summary: Initiate Google OAuth login
      responses:
        '302':
          description: Redirect to Google for OAuth
  /login/google/callback:
    get:
      tags:
        - Google OAuth
      summary: Google OAuth callback
      responses:
        '302':
          description: Redirect after successful OAuth
  /users/{id}:
    get:
      tags:
        - User
      summary: Get user details by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details retrieved successfully
        '404':
          description: User not found
    put:
      tags:
        - User
      summary: Update user details by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Bad request
  /users/{id}/admin:
    put:
      tags:
        - User
      summary: Update a user to admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User updated to admin successfully
        '400':
          description: Bad request
  /user-details/{user_id}:
    get:
      tags:
        - User Details
      summary: Get user details by user ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details retrieved successfully
        '404':
          description: User not found
    post:
      tags:
        - User Details
      summary: Add or update user details
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sex:
                  type: string
                pronouns:
                  type: string
                due_date:
                  type: string
                  format: date
                first_pregnancy:
                  type: boolean
                phone_number:
                  type: string
                can_receive_texts:
                  type: boolean
      responses:
        '200':
          description: User details added or updated successfully
        '400':
          description: Bad request
  /subscriptions/{user_id}:
    get:
      tags:
        - Subscriptions
      summary: Get subscription status for a user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Subscription status retrieved successfully
        '404':
          description: User not found
    post:
      tags:
        - Subscriptions
      summary: Subscribe or unsubscribe a user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscribe_newsletter:
                  type: boolean
                subscribe_texts:
                  type: boolean
      responses:
        '200':
          description: Subscription updated successfully
        '400':
          description: Bad request
  /reference_calendar:
    post:
      tags:
        - Reference Calendar
      summary: Create a new reference calendar event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day_of_pregnancy:
                  type: integer
                description:
                  type: string
      responses:
        '201':
          description: Reference calendar event created successfully
        '400':
          description: Bad request
    get:
      tags:
        - Reference Calendar
      summary: Get all reference calendar events
      responses:
        '200':
          description: Reference calendar events retrieved successfully
  /reference_calendar/{id}:
    put:
      tags:
        - Reference Calendar
      summary: Update a reference calendar event
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day_of_pregnancy:
                  type: integer
                description:
                  type: string
      responses:
        '200':
          description: Reference calendar event updated successfully
        '400':
          description: Bad request
    delete:
      tags:
        - Reference Calendar
      summary: Delete a reference calendar event
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Reference calendar event deleted successfully
        '404':
          description: Event not found
  /users/{user_id}/calendar:
    get:
      tags:
        - User Calendar
      summary: Get user calendar events
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User calendar events retrieved successfully
        '404':
          description: User calendar not found
  /users/{user_id}/calendar/custom:
    post:
      tags:
        - User Calendar
      summary: Add a custom event to user calendar
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_date:
                  type: string
                  format: date
                description:
                  type: string
      responses:
        '201':
          description: Custom event added successfully
        '400':
          description: Bad request
    put:
      tags:
        - User Calendar
      summary: Update a custom event in the user calendar
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_date:
                  type: string
                  format: date
                description:
                  type: string
      responses:
        '200':
          description: Custom event updated successfully
        '404':
          description: Event not found
    delete:
      tags:
        - User Calendar
      summary: Delete a custom event from the user calendar
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Custom event deleted successfully
        '404':
          description: Event not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        is_admin:
          type: boolean
    UserDetails:
      type: object
      properties:
        sex:
          type: string
        pronouns:
          type: string
        due_date:
          type: string
          format: date
        first_pregnancy:
          type: boolean
        phone_number:
          type: string
        can_receive_texts:
          type: boolean
    ReferenceCalendar:
      type: object
      properties:
        id:
          type: integer
        day_of_pregnancy:
          type: integer
        description:
          type: string
    UserCalendar:
      type: object
      properties:
        id:
          type: integer
        event_date:
          type: string
          format: date
        description:
          type: string
